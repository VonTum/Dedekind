<RTL_SPEC>
  <!-- 'name' is how this function will be called from an OpenCL kernel.
       'module' is the top-level HDL module name that implements the function. -->
  <FUNCTION name="fullPipeline" module="openCLFullPipeline">
    <ATTRIBUTES>
      <!-- Setting IS_STALL_FREE="yes" means the function neither generates stalls internally nor can it 
           properly handle incoming stalls (because it simply ignores its stall/valid inputs). If set
           to "no", the function must properly handle stall/valid signals. 
           IS_STALL_FREE="yes" requires IS_FIXED_LATENCY="yes". -->
      <IS_STALL_FREE value="no"/>
      
      <!-- If the function always takes known number of clock cycles (specified by EXPECTED_LATENCY)
           to compute its output, set IS_FIXED_LATENCY to "yes".
           Note that IS_FIXED_LATENCY could be "yes" while IS_STALL_FREE="no". Such a function would
           produce its output in fixed number of cycles but could still deal with stall signals 
           properly.  -->
      <IS_FIXED_LATENCY value="no"/>
      
      <!-- Expected latency of this function. If IS_FIXED_LATENCY="yes", this is the number of 
           pipeline stages inside the function. In this case, EXPECTED_LATENCY must be set exactly
           to the latency of the function, otherwise incorrect hardware will result.
           For variable latency functions, pipeline around this function will be balanced to this 
           value. Setting EXPECTED_LATENCY to a different value will still produce correct results
           but may affect number of stalls inside the pipeline. -->
      <EXPECTED_LATENCY value="7200"/> <!-- mem size is 8192-1024, so just a bit more for stalls-->
      
      <!-- Number of multiple inputs that can be processed simultaneously by this function.
           If IS_STALL_FREE="no" and IS_FIXED_LATENCY="no", the CAPACITY value must be specified.
           Otherwise, it is not required.
           If CAPACITY is strictly less than EXPECTED_LATENCY, the compiler will automatically 
           insert capacity-balancing FIFOs after this function when required. -->
      <CAPACITY value="7200"/> <!-- mem size is 8192, but only ~7200 is active at a time-->
      
      <!-- Set to "yes" to indicate that this function has side-effects. Calls to functions
           with side-effects will not be optimized away and only valid data will be fed
           to such functions.
           Functions that have internal state or talk to external memories are examples of functions
           with side-effects. -->
      <HAS_SIDE_EFFECTS value="yes"/>
            
      <!-- Set to "yes" to allow multiple instances of this function to be merged by the compiler.
           This property should be set to "yes". 
           Note that marking function with HAS_SIDE_EFFECTS does not prevent merging. -->
      <ALLOW_MERGING value="no"/>
    </ATTRIBUTES>
    <INTERFACE>
      <AVALON port="clock" type="clock"/>
      <AVALON port="resetn" type="resetn"/>
      <AVALON port="ivalid" type="ivalid"/>
      <AVALON port="iready" type="iready"/>
      <AVALON port="ovalid" type="ovalid"/>
      <AVALON port="oready" type="oready"/>
      <INPUT  port="botUpper" width="64"/>
      <INPUT  port="botLower" width="64"/>
      <INPUT  port="startNewTop" width="1"/>
      <OUTPUT port="summedDataPcoeffCountOut" width="64"/>
    </INTERFACE>
    <C_MODEL>
      <FILE name="src/fullPipelineCModel.cl"/>
    </C_MODEL>
    <REQUIREMENTS>
      <!--Verilog Headers -->
      <FILE name="src/inlineVarSwap_header.v"/>
      <FILE name="src/pipelineGlobals_header.v"/>
      <FILE name="src/leafElimination_header.v"/>
      
      <!-- Source Files -->
      <FILE name="src/openCLFullPipeline.v"/>
          <FILE name="src/pipelineManager.v"/>
               <FILE name="src/hyperPipelining.v"/>
          <FILE name="src/outputBuffer.v"/>
          <FILE name="src/resetNormalizer.v"/>
          <FILE name="src/multiPermutChecks.v"/>
          <FILE name="src/fullPipeline.v"/>
               <FILE name="src/inputModule.v"/>
                    <FILE name="src/botPermuter.v"/>
               <FILE name="src/computeModule.v"/>
                    <FILE name="src/leafElimination.v"/>
                         <FILE name="src/exactlyOne.v"/>
                    <FILE name="src/singletonElimination.v"/>
                    <FILE name="src/pipelinedCountConnectedCore.v"/>
                         <FILE name="src/monotonize.v"/>
               <FILE name="src/collectionModule.v"/>
      <!-- IP Blocks -->
      <FILE name="src/M20K.v"/>
      <FILE name="src/FIFO.v"/>
      <!--<FILE name="src/ip/collectorM20k.ip"/>-->
          <!--<FILE name="src/ip/collectorM20K/synth/collectorM20K.v"/>
          <FILE name="src/ip/collectorM20K/ram_2port_2020/synth/collectorM20K_ram_2port_2020_7x5qxgq.v"/>-->
      <!--<FILE name="src/ip/pipelineFifo.ip"/>-->
          <!--<FILE name="src/ip/pipelineFifo/synth/pipelineFifo.v"/>
          <FILE name="src/ip/pipelineFifo/fifo_1910/synth/pipelineFifo_fifo_1910_o2naleq.v"/>-->
      <!--<FILE name="src/ip/outputBufferFifo.ip"/>-->
          <!--<FILE name="src/ip/outputBufferFifo/synth/outputBufferFifo.v"/>
          <FILE name="src/ip/outputBufferFifo/fifo_1910/synth/outputBufferFifo_fifo_1910_3r4w6zi.v"/>-->
      
      <!-- Constraints -->
      <!--<FILE name="src/pipelineClock.sdc"/>-->
    </REQUIREMENTS>
  </FUNCTION>
</RTL_SPEC>

